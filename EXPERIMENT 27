%{
#include <stdio.h>
#include <stdlib.h>
%}

%%
"int"|"void"|"return"          { printf("Keyword: %s\n", yytext); }
"#[a-zA-Z]+"                   { printf("Preprocessor Directive: %s\n", yytext); }
[a-zA-Z_][a-zA-Z0-9_]*         { printf("Identifier: %s\n", yytext); }
[0-9]+                         { printf("Constant: %s\n", yytext); }
\"[^\"]*\"                     { printf("String Literal: %s\n", yytext); }
[+\-*/=<>!&|^%]+               { printf("Operator: %s\n", yytext); }
[{}();,]                       { printf("Punctuation: %s\n", yytext); }
[ \t\n]+                      ; /* Ignore whitespaces and newlines */
.                              { printf("Unknown Token: %s\n", yytext); }

%%

int main(int argc, char *argv[]) {
    FILE *input;

    if (argc != 2) {
        printf("Usage: %s <input_file.c>\n", argv[0]);
        return 1;
    }

    input = fopen(argv[1], "r");
    if (!input) {
        perror("Error opening input file");
        return 1;
    }

    yyin = input;
    yylex();
    fclose(input);

    return 0;
}

int yywrap() {
    return 1;
}
